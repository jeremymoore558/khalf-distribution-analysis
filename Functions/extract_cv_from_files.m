%% Function to extract coefficient of variation and other statistics
% Purpose: extract the coefficient of variation, mean, std, and estimation
% error from analyzed K1/2 distributions. Inputs are a list of output
% folders generated by running Main.m. Returns four vectors: CV, means,
% stds, and err containing the corresponding values.

function [CV, means, stds, CVerr, CVlowbound, CVupperbound, meanerr, meanlowbound, meanupperbound] = extract_cv_from_files(CVFiles)
    CV = [];
    means = [];
    stds = [];
    CVerr = [];   
    CVlowbound = [];
    CVupperbound = [];
    meanerr = [];
    meanlowbound = [];
    meanupperbound = [];
    for jj = 1:length(CVFiles)  
        %Load Data
        load([convertStringsToChars(CVFiles(jj)), 'plotData.mat'], "CDFPlotData")
        rnd = CDFPlotData.MCMCSamples; %Dimensions: [mu, sigma, A (not used)]
    
        %Calculate CV
        mu = CDFPlotData.p_opt(1);
        sigma = CDFPlotData.p_opt(2);
%         m = exp(mu + sigma^2/2);
%         v = exp(2*mu + sigma^2)*(exp(sigma^2) - 1);

        m_all = exp(rnd(:, 1) + rnd(:,2).^2./2);
        v_all = exp(2*rnd(:, 1) + rnd(:, 2).^2).*(exp(rnd(:, 2).^2) - 1);
        stdev_all = sqrt(v_all);

%         CV_all = stdev_all./m_all;
%         CV_temp = mean(stdev_all)./mean(m_all);
        CV_all = sqrt(exp(rnd(:,2).^2)-1); %calculated from the value of sigma 
        CV_temp = sqrt(exp(median(sigma.^2))-1);
%         CV_temp = sqrt(exp(mean(sigma))-1);
%         CV = [CV, median(CV_all)];
        CV = [CV, CV_temp];
        means = [means, mean(m_all)];
%         means = [means, median(m_all)];
        stds = [stds, mean(sqrt(v_all))];
%         stds = [stds, median(sqrt(v_all))];
        meanerr = [meanerr, std(m_all)];
        meanlowbound = [meanlowbound, prctile(m_all, 2.5)];
        meanupperbound = [meanupperbound, prctile(m_all, 97.5)];
        CVerr = [CVerr, std(CV_all)];
        CVlowbound = [CVlowbound, prctile(CV_all, 2.5)]; %lower bound of 95CI
        CVupperbound = [CVupperbound, prctile(CV_all, 97.5)];
    end
end